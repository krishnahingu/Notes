{"version":3,"sources":["reducer/api.js","component/forms/AddNoteForm.js","component/forms/EditNoteForm.js","component/tables/NoteTable.js","pages/Notes/Notes.js","reducer/loginReducer.js","pages/Login/Login.js","App.js","index.js"],"names":["login","username","password","a","Promise","resolve","reject","setTimeout","AddNoteForm","props","initialFormState","id","title","description","useState","note","setNote","handleInputChange","event","target","name","value","className","onClick","onSubmit","preventDefault","addNote","type","required","onChange","rows","EditNoteForm","currentNote","useEffect","setEditing","updateNote","NoteTable","notes","length","map","key","editRow","e","stopPropagation","deleteNote","Notes","setNotes","setCurrentNote","editing","filter","updatedNote","initialState","isLoading","error","isLoggedIn","curriedLoginReducer","produce","draft","action","fieldName","payload","Login","useReducer","state","dispatch","placeholder","currentTarget","autoComplete","disabled","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74d9115b.chunk.js","sourcesContent":["export async function login({ username, password }) {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (username === 'admin' && password === 'admin') {\n          resolve();\n        } else {\n          reject();\n        }\n      }, 1000);\n    });\n  }\n  ","import React, { useState } from 'react'\n\n\nconst AddNoteForm = props => {\n\tconst initialFormState = { id: null, title: '', description: '' }\n\tconst [ note, setNote ] = useState(initialFormState)\n\n\tconst handleInputChange = event => {\n\t\tconst { name, value } = event.target\n\n\t\tsetNote({ ...note, [name]: value })\n\t}\n\tconst newNote = () => {\n\t\tsetNote(initialFormState)\n\t}\n\n\treturn (\n\t\t<div className=\"col-md-12  \" >\n\t\t  <div className=\" row-md-6  float-right \">\n        \t<button onClick={newNote}  className=\"btn btn-outline-secondary \">+ Add Note</button>\n\t\t\t</div>\n\t\t\t<div className=\" pt-10 row-md-6  \">\n\t\t\t\t<form\n\t\t\t\tonSubmit={event => {\n\t\t\t\t\tevent.preventDefault()\n\t\t\t\t\tif (!note.title || !note.description) return\n\n\t\t\t\t\tprops.addNote(note)\n\t\t\t\t\tsetNote(initialFormState)\n\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t<label>Title</label>\n\t\t\t\t<input type=\"text\"  required name=\"title\" value={note.title} onChange={handleInputChange} />\n\t\t\t\t<label>Body</label>\n\t\t\t\t<textarea rows=\"10\"  required type=\"text\" name=\"description\" value={note.description} onChange={handleInputChange} />\n\t\t\t\t<button className=\"col-md-3 btn btn-primary float-right\">Save</button>\n\t\t\t</form>\n\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AddNoteForm\n","import React, { useState, useEffect } from 'react'\n\nconst EditNoteForm = props => {\n  const initialFormState = { id: null, title: '', description: '' }\n  const [ note, setNote ] = useState(props.currentNote)\n\n  useEffect(\n    () => {\n      setNote(props.currentNote)\n    },\n    [ props ]\n  )\n  // You can tell React to skip applying an effect if certain values havenâ€™t changed between re-renders. [ props ]\n\n  const handleInputChange = event => {\n    const { name, value } = event.target\n\n    setNote({ ...note, [name]: value })\n  }\n  const newNote = () => {\n\t\tsetNote(initialFormState)\n\t}\n\n  return (\n    \n    <div className=\"col-md-12  \" >\n      <div className=\" row-md-12 float-right \">\n        <button onClick={() => props.setEditing(false)}  className=\"btn btn-outline-secondary \">+ Add Note</button>\n      </div>\n      <div className=\"row-md-12 \">\n      <form\n      onSubmit={event => {\n        event.preventDefault()\n\n        props.updateNote(note.id, note)\n      }}\n    >\n      <label>Title</label>\n      <input type=\"text\"  required name=\"title\" value={note.title} onChange={handleInputChange} />\n      <label>Body</label>\n      <textarea rows=\"10\"  required type=\"text\" name=\"description\" value={note.description} onChange={handleInputChange} />\n     \n      <div className=\"row-md-12\" >  \n      <button className=\" col-md-3 btn btn-primary float-right\" >Save</button>\n      </div>\n    </form>\n    </div>\n    </div>\n  )\n}\n\nexport default EditNoteForm\n","import React from 'react'\n\nconst NoteTable = props => (\n  <div className=\"row \">\n    <div className=\"col-md-12 \">\n      {props.notes.length > 0 ? (\n        props.notes.map(note => (\n          <div className=\"row  border \" key={note.id} onClick={() => { props.editRow(note) }}>\n            <div className=\"col-md-10 table \">\n              <div ><b>{note.title}</b></div>\n              <div>{note.description}</div>\n            </div>\n            <div className=\"col-md-2\">\n            <button\n                onClick={(e) => {\n                  e.stopPropagation();\n                  props.deleteNote(note.id)}\n                }\n                className=\"btn bg-transparent text-secondary\"\n              >\n             X\n              </button>\n            </div>\n          </div>\n        ))\n      ) : (\n        <div>\n          <div className=\"row  border \">No notes</div>\n        </div>\n      )}\n    </div>\n  </div>\n)\n\nexport default NoteTable\n","import React, { useState, Fragment } from 'react'\nimport AddNoteForm from '../../component/forms/AddNoteForm'\nimport EditNoteForm from '../../component/forms/EditNoteForm'\nimport NoteTable from '../../component/tables/NoteTable'\n\nconst Notes = () => {\n\t// Data\n\tconst notesData = [\n\t\t{ id: 1, title: 'Tania', description: 'floppydiskette' },\n\t\t{ id: 2, title: 'Craig', description: 'siliconeidolon' },\n\t\t{ id: 3, title: 'Ben', description: 'benisphere' },\n\t]\n\n\tconst initialFormState = { id: null, title: '', description: '' }\n\n\t// Setting state\n\tconst [ notes, setNotes ] = useState(notesData)\n\tconst [ currentNote, setCurrentNote ] = useState(initialFormState)\n\tconst [ editing, setEditing ] = useState(false)\n\n\t// CRUD operations\n\tconst addNote = note => {\n\t\tnote.id = notes.length + 1\n\t\tsetNotes([ ...notes, note ])\n\t}\n\n\tconst deleteNote = id => {\n\t\tsetEditing(false)\n\n\t\tsetNotes(notes.filter(note => note.id !== id))\n\t}\n\n\tconst updateNote = (id, updatedNote) => {\n\t\tsetEditing(false)\n\n\t\tsetNotes(notes.map(note => (note.id === id ? updatedNote : note)))\n\t}\n\n\tconst editRow = note => {\n\t\tsetEditing(true)\n\n\t\tsetCurrentNote({ id: note.id, title: note.title, description: note.description })\n\t}\n\t\n\n\treturn (\n\t\t<div className=\"col-md-12  m-2\">\n\t\t\t<div className=\"row bg-light border\"><h3 className=\"text-secondary col-md-12\">G Notes</h3> </div>\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t<NoteTable notes={notes} editRow={editRow} deleteNote={deleteNote} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"flex-large\">\n\t\t\t\t\t{editing ? (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t{/* <h2>Edit note</h2> */}\n\t\t\t\t\t\t\t<EditNoteForm\n\t\t\t\t\t\t\t\tediting={editing}\n\t\t\t\t\t\t\t\tsetEditing={setEditing}\n\t\t\t\t\t\t\t\tcurrentNote={currentNote}\n\t\t\t\t\t\t\t\tupdateNote={updateNote}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t{/* <h2>Add note</h2> */}\n\t\t\t\t\t\t\t<AddNoteForm addNote={addNote} />\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Notes\n","import produce from 'immer';\n\nfunction loginReducer(draft, action) {\n    switch (action.type) {\n      case 'field': {\n        draft[action.fieldName] = action.payload;\n        return;\n      }\n      case 'login': {\n        draft.error = '';\n        draft.isLoading = true;\n        return;\n      }\n      case 'success': {\n        draft.isLoggedIn = true;\n        draft.isLoading = false;\n       // draft.username = '';\n        draft.password = '';\n        return;\n      }\n      case 'error': {\n        draft.error = 'Incorrect username or password!';\n        draft.isLoggedIn = false;\n        draft.isLoading = false;\n        draft.username = '';\n        draft.password = '';\n        return;\n      }\n      case 'logOut': {\n        draft.isLoggedIn = false;\n        draft.username = '';\n        draft.password = '';\n        return;\n      }\n      default:\n        return;\n    }\n  }\n  \n  export const initialState = {\n    username: '',\n    password: '',\n    isLoading: false,\n    error: '',\n    isLoggedIn: false,\n  };\n  \n  export const curriedLoginReducer = produce(loginReducer);","import React, { useReducer } from 'react';\n// import { useImmerReducer } from 'use-immer';\nimport { login } from '../../reducer/api';\nimport Notes from '../Notes/Notes';\nimport {curriedLoginReducer,initialState }  from '../../reducer/loginReducer'\n\n\nexport default function Login() {\n  \n  const [state, dispatch] = useReducer(curriedLoginReducer, initialState);\n  const { username, password, isLoading, error, isLoggedIn } = state;\n\n  const onSubmit = async (e) => {\n    e.preventDefault();\n\n    dispatch({ type: 'login' });\n\n    try {\n      await login({ username, password });\n      dispatch({ type: 'success' });\n    } catch (error) {\n      dispatch({ type: 'error' });\n    }\n  };\n\n  return (\n    <div className='container-fluid'>\n      <div className='row justify-content-md-center'>\n        {isLoggedIn ? (\n          <>\n            <div className='row max m-2'>\n              <div className='col-md-6'> <h1>Welcome {username}!</h1></div>\n              <div  className='col-md-6 mt-10' >\n              <h1><button  className='btn btn-danger float-right' onClick={() => dispatch({ type: 'logOut' })}>\n               Log Out\n                </button></h1>\n              </div>\n              <Notes/>\n            </div>\n           \n          </>\n        ) : (\n          <form className='col-md-6 mt-5' onSubmit={onSubmit}>\n            <div className=\"form-group text-center \">\n              {error && <p className='error'>{error}</p>}\n              <p>Please Login!</p>\n            </div>\n            <div className=\"form-group\">\n              <input\n                className=\"form-control\"\n                type='text'\n                placeholder='username'\n                value={username}\n                required\n                onChange={(e) =>\n                  dispatch({\n                    type: 'field',\n                    fieldName: 'username',\n                    payload: e.currentTarget.value,\n                  })\n                }\n              />\n            </div>\n            <div className=\"form-group\">\n              <input\n              className=\"form-control\"\n                type='password'\n                placeholder='password'\n                autoComplete='new-password'\n                value={password}\n                required\n                onChange={(e) =>\n                  dispatch({\n                    type: 'field',\n                    fieldName: 'password',\n                    payload: e.currentTarget.value,\n                  })\n                }\n              />\n            </div>\n            <div className=' text-center'>\n            <button className='btn btn-primary' type='submit' disabled={isLoading}>\n              {isLoading ? 'Logging in...' : 'Log In'}\n            </button>\n            </div>\n          </form>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useState, Fragment } from 'react'\nimport Login from './pages/Login/Login'\n\nconst App = () => {\n\treturn (\n\t\t<Login/>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}